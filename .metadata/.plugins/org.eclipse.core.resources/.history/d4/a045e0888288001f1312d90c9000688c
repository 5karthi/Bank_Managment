package com.BankManag.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.GetMapping;

import com.BankManag.Model.CustomerDTO;
import com.BankManag.entity.Customer;
import com.BankManag.service.CustomerService;
import com.BankManag.util.CustomerConverter;

@Controller
public class CustomerController {

    @Autowired
    private CustomerService customerService;

    @Autowired
    private CustomerConverter customerConverter;

    // Create a new customer account with CustomerDTO
    @PostMapping("/createAccount")
    public String createAccount(@ModelAttribute CustomerDTO customerDTO, Model model) {
        // Convert DTO to entity
        Customer customer = customerConverter.convertToEntity(customerDTO);

        // Service call to create the account
        String result = customerService.createAccount(customer);
        model.addAttribute("message", result);

        return "result";
    }

    // Update customer details with CustomerDTO
    @PostMapping("/updateAccount")
    public String updateAccountDetail(@RequestParam int accountId, @ModelAttribute CustomerDTO customerDTO, Model model) {
        // Convert DTO to entity
        Customer customer = customerConverter.convertToEntity(customerDTO);

        // Service call to update the customer details
        CustomerDTO updatedCustomer = customerService.updateAccountDetail(accountId, customer);
        model.addAttribute("customer", updatedCustomer);

        return "viewCustomerDetails";
    }

    // Get account details by customer ID
    @GetMapping("/getAccountDetailByCustomerId")
    public String getAccountDetailByCustomerId(@RequestParam int accountId, Model model) {
        CustomerDTO customerDTO = customerService.getAccountDetailByCustomerId(accountId);
        model.addAttribute("customer", customerDTO);
        return "viewCustomerDetails";
    }

    // Check balance by account ID
    @GetMapping("/checkBalance")
    public String checkBalance(@RequestParam int accountId, Model model) {
        String result = customerService.checkBalanceById(accountId);
        model.addAttribute("message", result);
        return "result";
    }

    // Get customer(s) by name
    @GetMapping("/customerByName")
    public String getCustomerByName(@RequestParam String customerName, Model model) {
        model.addAttribute("customers", customerService.getCustomerByName(customerName));
        return "viewCustomerDetails";  // Should loop over customers to show details
    }
}
